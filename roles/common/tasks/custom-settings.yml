---

# Set local timezone
#-------------------
- name: set timezone to CEST 
  timezone:
    name: "{{ local_timezone }}"
  notify:
    - restart cron


# Install OS packages 
#--------------------
- name: "install apt packages: {{ apt_packages_to_install | to_yaml }}"
  apt: name={{ item }} state=present
  with_items: "{{ apt_packages_to_install }}" 


# Install python packages
#------------------------
- name: "install python packages: {{ pip_packages_to_install | to_yaml }}"
  sudo: true
  pip: name={{ item }}
  with_items: "{{ pip_packages_to_install }}"


# Remove OS packages
#-------------------
- name: "remove apt packages: {{ apt_packages_to_uninstall | to_yaml }}"
  apt: name={{ item }} state=absent purge=yes autoremove=yes
  with_items: "{{ apt_packages_to_uninstall }}"


# Run apt update cache
#---------------------
- name: update apt cache if it's 1 day old
  apt:
    update_cache: yes
    cache_valid_time: 86400 


# Customize ssh server config
#----------------------------
- name: "set root login to: {{ permit_root_login_to }}"
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^PermitRootLogin'
    line: 'PermitRootLogin {{ permit_root_login_to }}'
  
- name: "set allowed ssh users to: {{ allowed_ssh_users }}"
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^AllowUsers'
    line: 'AllowUsers {{ allowed_ssh_users }}'
  notify:
    - restart ssh


# Set log rotation of ansible.log file
#-------------------------------------
- name: set log rotation of playbook exec log
  copy:
    src: ansible 
    dest: /etc/logrotate.d 
  notify:
    - run logrotate


# Customize bashrc file of 'pi' user
#-----------------------------------
# * Set history command to display date time format
- name: set profile for user pi
  remote_user: pi
  copy:
    src: .bashrc 
    dest: /home/pi

